webpackJsonp([0x61a92b92ead0],{492:function(e,i){e.exports={data:{markdownRemark:{html:"<h2>System throughput SLI/SLO details</h2>\n<h3>User stories</h3>\n<ul>\n<li>As a user, I want a guarantee that my workload of X pods can be started\nwithin a given time</li>\n<li>As a user, I want to understand how quickly I can react to a dramatic\nchange in workload profile when my workload exhibits very bursty behavior\n(e.g. shop during Back Friday Sale)</li>\n<li>As a user, I want a guarantee how quickly I can recreate the whole setup\nin case of a serious disaster which brings the whole cluster down.</li>\n</ul>\n<h3>Test scenario</h3>\n<ul>\n<li>Start with a healthy (all nodes ready, all cluster addons already running)\ncluster with N (>0) running pause pods per node.</li>\n<li>Create a number of <code>Namespaces</code> and a number of <code>Deployments</code> in each of them.</li>\n<li>All <code>Namespaces</code> should be isomorphic, possibly excluding last one which should\nrun all pods that didn't fit in the previous ones.</li>\n<li>\n<p>Single namespace should run 5000 <code>Pods</code> in the following configuration:</p>\n<ul>\n<li>one big <code>Deployment</code> running ~1/3 of all <code>Pods</code> from this <code>namespace</code></li>\n<li>medium <code>Deployments</code>, each with 120 <code>Pods</code>, in total running ~1/3 of all\n<code>Pods</code> from this <code>namespace</code></li>\n<li>small <code>Deployment</code>, each with 10 <code>Pods</code>, in total running ~1/3 of all <code>Pods</code>\nfrom this <code>Namespace</code></li>\n</ul>\n</li>\n<li>Each <code>Deployment</code> should be covered by a single <code>Service</code>.</li>\n<li>Each <code>Pod</code> in any <code>Deployment</code> contains two pause containers, one <code>Secret</code>\nother than default <code>ServiceAccount</code> and one <code>ConfigMap</code>. Additionally it has\nresource requests set and doesn't use any advanced scheduling features or\ninit containers.</li>\n</ul>"},site:{siteMetadata:{sigs:["sig-api-machinery","sig-apps","sig-architecture","sig-auth","sig-autoscaling","sig-aws","sig-azure","sig-big-data","sig-cli","sig-cloud-provider","sig-cluster-lifecycle","sig-cluster-ops","sig-contributor-experience","sig-docs","sig-gcp","sig-ibmcloud","sig-instrumentation","sig-multicluster","sig-network","sig-node","sig-openstack","sig-product-management","sig-release","sig-scalability","sig-scheduling","sig-service-catalog","sig-storage","sig-testing","sig-ui","sig-vmware","sig-windows"]}}},pathContext:{slug:"/sig-scalability/slos/system-throughput/"}}}});
//# sourceMappingURL=path---sig-scalability-slos-system-throughput-0c1a10ff9aa5a9802685.js.map