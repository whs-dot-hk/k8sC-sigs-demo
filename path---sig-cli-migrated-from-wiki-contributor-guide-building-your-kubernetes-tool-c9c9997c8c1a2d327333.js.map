{"version":3,"sources":["webpack:///path---sig-cli-migrated-from-wiki-contributor-guide-building-your-kubernetes-tool-c9c9997c8c1a2d327333.js","webpack:///./.cache/json/sig-cli-migrated-from-wiki-contributor-guide-building-your-kubernetes-tool.json"],"names":["webpackJsonp","449","module","exports","data","markdownRemark","html","site","siteMetadata","sigs","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,8vEAAowEC,MAASC,cAAgBC,MAAA,ofAA2fC,aAAgBC,KAAA","file":"path---sig-cli-migrated-from-wiki-contributor-guide-building-your-kubernetes-tool-c9c9997c8c1a2d327333.js","sourcesContent":["webpackJsonp([258493444401860],{\n\n/***/ 449:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Client Tool Release Publishing Guidelines</h1>\\n<p>Projects should publish releases for client side tools.</p>\\n<h2>Go Projects</h2>\\n<h3>Static Linking</h3>\\n<p>See <a href=\\\"http://matthewkwilliams.com/index.php/2014/09/28/go-executables-are-statically-linked-except-when-they-are-not/\\\">Go executables are statically linked, except when they are not</a>. </p>\\n<ul>\\n<li>How to compile a statically linked binary: <code>go</code> file must be compiled without cgo support. </li>\\n</ul>\\n<pre><code class=\\\"language-sh\\\"># Disable cgo\\nexport CGO_ENABLED=0\\n</code></pre>\\n<ul>\\n<li>How to check if a binary is statically linked</li>\\n</ul>\\n<pre><code class=\\\"language-sh\\\"># List dynamic dependencies (shared libraries):\\n# 1. if it's dynamically linked, you'll see\\n$ ldd &#x3C;your_tool> \\n    linux-vdso.so.1 =>  (0x00007ffe937ea000)\\n    libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f0a7dae5000)\\n    libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f0a7d720000)\\n    /lib64/ld-linux-x86-64.so.2 (0x00007f0a7dd03000)\\n# 2. if it's statically linked, you'll see\\n$ ldd &#x3C;your_tool>  \\n    not a dynamic executable\\n\\n# Recognize the type of data in a file\\n# 1. if it's dynamically linked, you'll see\\n$ file &#x3C;your_tool> \\n/usr/local/your_tool: ELF 64-bit LSB  executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.32, BuildID[sha1]=86c6d2ff21297a06cc7319244f35e2671612beae, not stripped\\n# 2. if it's statically linked, you'll see\\n$ file  &#x3C;your_tool>  \\n/usr/local/your_tool: ELF 64-bit LSB  executable, x86-64, version 1 (SYSV), statically linked, not stripped\\n</code></pre>\\n<h3>Targets</h3>\\n<p>Build your release binary for the following targets:</p>\\n<ul>\\n<li>darwin-amd64</li>\\n<li>linux-386</li>\\n<li>linux-amd64</li>\\n<li>linux-armv6l</li>\\n<li>linux-ppc64le</li>\\n<li>windows-amd64</li>\\n</ul>\\n<h3>Packaging</h3>\\n<p>Package binaries into a tar.gz file and make available on GitHub releases page.</p>\\n<h1>Service Side Release Publishing Guidelines</h1>\\n<h3>Packaging</h3>\\n<p>Server side programs should be packaged into container images.  Stateless services should be run as Deployments (as opposed to Replication Controllers).</p>\\n<h1>Documentation Guidelines</h1>\\n<p>TODO: Write this</p>\"},\"site\":{\"siteMetadata\":{\"sigs\":[\"sig-api-machinery\",\"sig-apps\",\"sig-architecture\",\"sig-auth\",\"sig-autoscaling\",\"sig-aws\",\"sig-azure\",\"sig-big-data\",\"sig-cli\",\"sig-cloud-provider\",\"sig-cluster-lifecycle\",\"sig-cluster-ops\",\"sig-contributor-experience\",\"sig-docs\",\"sig-gcp\",\"sig-ibmcloud\",\"sig-instrumentation\",\"sig-multicluster\",\"sig-network\",\"sig-node\",\"sig-openstack\",\"sig-product-management\",\"sig-release\",\"sig-scalability\",\"sig-scheduling\",\"sig-service-catalog\",\"sig-storage\",\"sig-testing\",\"sig-ui\",\"sig-vmware\",\"sig-windows\"]}}},\"pathContext\":{\"slug\":\"/sig-cli/migrated-from-wiki/contributor-guide-building-your-kubernetes-tool/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---sig-cli-migrated-from-wiki-contributor-guide-building-your-kubernetes-tool-c9c9997c8c1a2d327333.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h1>Client Tool Release Publishing Guidelines</h1>\\n<p>Projects should publish releases for client side tools.</p>\\n<h2>Go Projects</h2>\\n<h3>Static Linking</h3>\\n<p>See <a href=\\\"http://matthewkwilliams.com/index.php/2014/09/28/go-executables-are-statically-linked-except-when-they-are-not/\\\">Go executables are statically linked, except when they are not</a>. </p>\\n<ul>\\n<li>How to compile a statically linked binary: <code>go</code> file must be compiled without cgo support. </li>\\n</ul>\\n<pre><code class=\\\"language-sh\\\"># Disable cgo\\nexport CGO_ENABLED=0\\n</code></pre>\\n<ul>\\n<li>How to check if a binary is statically linked</li>\\n</ul>\\n<pre><code class=\\\"language-sh\\\"># List dynamic dependencies (shared libraries):\\n# 1. if it's dynamically linked, you'll see\\n$ ldd &#x3C;your_tool> \\n    linux-vdso.so.1 =>  (0x00007ffe937ea000)\\n    libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f0a7dae5000)\\n    libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f0a7d720000)\\n    /lib64/ld-linux-x86-64.so.2 (0x00007f0a7dd03000)\\n# 2. if it's statically linked, you'll see\\n$ ldd &#x3C;your_tool>  \\n    not a dynamic executable\\n\\n# Recognize the type of data in a file\\n# 1. if it's dynamically linked, you'll see\\n$ file &#x3C;your_tool> \\n/usr/local/your_tool: ELF 64-bit LSB  executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.32, BuildID[sha1]=86c6d2ff21297a06cc7319244f35e2671612beae, not stripped\\n# 2. if it's statically linked, you'll see\\n$ file  &#x3C;your_tool>  \\n/usr/local/your_tool: ELF 64-bit LSB  executable, x86-64, version 1 (SYSV), statically linked, not stripped\\n</code></pre>\\n<h3>Targets</h3>\\n<p>Build your release binary for the following targets:</p>\\n<ul>\\n<li>darwin-amd64</li>\\n<li>linux-386</li>\\n<li>linux-amd64</li>\\n<li>linux-armv6l</li>\\n<li>linux-ppc64le</li>\\n<li>windows-amd64</li>\\n</ul>\\n<h3>Packaging</h3>\\n<p>Package binaries into a tar.gz file and make available on GitHub releases page.</p>\\n<h1>Service Side Release Publishing Guidelines</h1>\\n<h3>Packaging</h3>\\n<p>Server side programs should be packaged into container images.  Stateless services should be run as Deployments (as opposed to Replication Controllers).</p>\\n<h1>Documentation Guidelines</h1>\\n<p>TODO: Write this</p>\"},\"site\":{\"siteMetadata\":{\"sigs\":[\"sig-api-machinery\",\"sig-apps\",\"sig-architecture\",\"sig-auth\",\"sig-autoscaling\",\"sig-aws\",\"sig-azure\",\"sig-big-data\",\"sig-cli\",\"sig-cloud-provider\",\"sig-cluster-lifecycle\",\"sig-cluster-ops\",\"sig-contributor-experience\",\"sig-docs\",\"sig-gcp\",\"sig-ibmcloud\",\"sig-instrumentation\",\"sig-multicluster\",\"sig-network\",\"sig-node\",\"sig-openstack\",\"sig-product-management\",\"sig-release\",\"sig-scalability\",\"sig-scheduling\",\"sig-service-catalog\",\"sig-storage\",\"sig-testing\",\"sig-ui\",\"sig-vmware\",\"sig-windows\"]}}},\"pathContext\":{\"slug\":\"/sig-cli/migrated-from-wiki/contributor-guide-building-your-kubernetes-tool/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/sig-cli-migrated-from-wiki-contributor-guide-building-your-kubernetes-tool.json\n// module id = 449\n// module chunks = 258493444401860"],"sourceRoot":""}